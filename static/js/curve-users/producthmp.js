const productChainList = [
    "ethereum",
    "fantom",
    "optimism",
    "polygon",
    "xdai",
    "fraxtal",
    "base",
    "arbitrum"
];

const productChainData = {'All': [[100, 0.07805304484927958, 0.9678577561310667, 0.7930189356686804, 0.1077132018920058, 0.3122121793971183, 0.7055995254374874, 3.375013659282849], [4.916420845624385, 100, 2.55653883972468, 3.8348082595870205, 0.19665683382497542, 0.19665683382497542, 1.1799410029498525, 4.71976401179941], [8.19780510379479, 0.34377892370752344, 100, 17.70461457093746, 0.30411212481819383, 0.6478910485257173, 13.923046410154702, 21.40684913394156], [2.8998744148875444, 0.2226281538988469, 7.643566617193744, 100, 0.234044982303916, 0.21121132549377786, 30.43726452791414, 12.507135517753168], [8.013937282229964, 0.23228803716608595, 2.671312427409988, 4.761904761904762, 100, 0.6968641114982579, 1.3937282229965158, 5.1103368176538915], [45.87155963302752, 0.45871559633027525, 11.238532110091743, 8.486238532110093, 1.3761467889908259, 100, 8.486238532110093, 38.76146788990826], [2.0535186951978557, 0.054518195447730684, 4.783971650538367, 24.224251510608333, 0.054518195447730684, 0.1680977692971696, 100, 8.100495206941984], [11.481068450958526, 0.2548988370240561, 8.597525357123892, 11.635069831660559, 0.2336572672720514, 0.8974563220221974, 9.468429716956082, 100]], 'Trading': [[100, 0.04385265507893478, 0.27108914048796046, 0.17142401530856322, 0.071758890129166, 0.09169191516504545, 0.143517780258332, 1.0125976718226757], [2.3605150214592276, 100, 1.7167381974248928, 2.1459227467811157, 0.2145922746781116, 0.0, 0.6437768240343348, 1.7167381974248928], [4.156479217603912, 0.4889975550122249, 100, 1.466992665036675, 0.18337408312958436, 0.24449877750611246, 0.7334963325183375, 35.14669926650367], [2.6724673710379117, 0.6215040397762586, 1.4916096954630205, 100, 0.2486016159105034, 0.1243008079552517, 0.7458048477315102, 3.480422622747048], [3.0303030303030303, 0.16835016835016833, 0.5050505050505051, 0.6734006734006733, 100, 0.33670033670033667, 0.16835016835016833, 1.0101010101010102], [21.904761904761905, 0.0, 3.8095238095238098, 1.9047619047619049, 1.9047619047619049, 100, 0.9523809523809524, 10.476190476190476], [8.633093525179856, 0.7194244604316548, 2.877697841726619, 2.877697841726619, 0.2398081534772182, 0.2398081534772182, 100, 6.71462829736211], [4.994101454974439, 0.15729453401494298, 11.305544632324027, 1.1010617381046008, 0.11797090051120723, 0.21627998427054662, 0.5505308690523004, 100]], 'LP': [[100, 0.09055844373637431, 0.778131812845883, 0.5668287774610096, 0.05031024652020795, 0.31527754485996984, 0.5265805802448431, 2.5591145396612442], [9.782608695652174, 100, 6.521739130434782, 6.521739130434782, 0.7246376811594203, 0.36231884057971014, 1.4492753623188406, 9.782608695652174], [12.406417112299465, 0.9625668449197862, 100, 11.016042780748663, 0.37433155080213903, 2.0320855614973263, 4.438502673796791, 24.86631016042781], [5.276303465501093, 0.561973150171714, 6.4314704964096165, 100, 0.43709022791133306, 0.7492975335622853, 2.0605682172962845, 11.520449578520138], [12.195121951219512, 1.6260162601626018, 5.691056910569105, 11.38211382113821, 100, 1.6260162601626018, 2.4390243902439024, 13.008130081300814], [30.128205128205128, 0.3205128205128205, 12.179487179487179, 7.6923076923076925, 0.641025641025641, 100, 8.653846153846153, 40.38461538461539], [7.28538283062645, 0.18561484918793503, 3.851508120649652, 3.062645011600928, 0.13921113689095127, 1.2529002320185616, 100, 8.25986078886311], [14.388082217612672, 0.5091457665472374, 8.7686215349802, 6.958325476145578, 0.3017160098057703, 2.376013577220441, 3.356590609089195, 100]], 'UI Router': [[100, 0.020769294674752845, 1.0550801694774445, 0.7643100440309047, 0.07476946082911023, 0.3780011630805018, 0.6853867242668439, 3.8713965273739306], [1.392757660167131, 100, 0.2785515320334262, 1.392757660167131, 0.0, 0.0, 0.2785515320334262, 1.9498607242339834], [5.358649789029537, 0.02109704641350211, 100, 23.354430379746834, 0.16877637130801687, 0.4641350210970464, 20.59071729957806, 14.240506329113925], [1.3765242762025884, 0.037405550983765995, 8.28158898780579, 100, 0.15710331413181716, 0.15710331413181716, 39.403007406299096, 13.84753497419017], [7.6923076923076925, 0.0, 3.418803418803419, 8.974358974358974, 100, 0.8547008547008548, 1.282051282051282, 6.41025641025641], [34.33962264150943, 0.0, 8.30188679245283, 7.9245283018867925, 0.7547169811320755, 100, 8.30188679245283, 32.45283018867924], [0.8062545809919374, 0.004886391399951136, 4.769118006352309, 25.73662350354263, 0.014659174199853407, 0.107500610798925, 100, 7.964817981920352], [8.210730332129328, 0.06166857545590697, 5.946612633248172, 16.306933309840545, 0.13214694740551494, 0.7576424984582856, 14.359968284732622, 100]], 'Lend': [[100, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.090909090909092], [0, 100, 0, 0, 0, 0, 0, 0], [0, 0, 100, 0, 0, 0, 0, 0], [0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 0, 100, 0, 0, 0], [0, 0, 0, 0, 0, 100, 0, 0], [0, 0, 0, 0, 0, 0, 100, 0], [6.185567010309279, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 100]]}


let productHeatmapChart;

function createProductHeatmap(data, selectedProduct) {
    const productSeriesData = data.flatMap((row, i) =>
        row.map((value, j) => ({
            x: productChainList[j],
            y: value.toFixed(2)
        }))
    );

    const productOptions = {
        series: productChainList.map((chain, index) => ({
            name: chain,
            data: productSeriesData.slice(index * productChainList.length, (index + 1) * productChainList.length)
        })),
        chart: {
            height: 450,
            type: 'heatmap',
        },
        dataLabels: {
            enabled: true,
            style: {
                colors: ['#222']
            },
            formatter: function (value, {seriesIndex, dataPointIndex, w}) {
                return value + '%';
            }
        },
        colors: ["#008FFB"],
        title: {
            text: 'Proportion (%) of users using the same product on multiple chains'
        },
        xaxis: {
            type: 'category',
            categories: productChainList,
            tooltip: {
                enabled: false
            }
        },
        tooltip: {
            y: {
                formatter: function (value, {seriesIndex, dataPointIndex, w}) {
                    let x = w.config.xaxis.categories[dataPointIndex];
                    let y = w.config.series[seriesIndex].name;
                    return `${value}% of ${selectedProduct === 'All' ? 'Curve' : selectedProduct} users on ${y} also use it on ${x}`;
                },
                title: {
                    formatter: () => ''
                }
            }
        }
    };

    if (productHeatmapChart) {
        productHeatmapChart.destroy();
    }

    productHeatmapChart = new ApexCharts(document.querySelector("#productHeatmapChart"), productOptions);
    productHeatmapChart.render();
}

function updateProductHeatmapChart(selectedProduct) {
    const productData = productChainData[selectedProduct];
    createProductHeatmap(productData, selectedProduct);
}

function createProductSelector(selectId, onChangeCallback) {
    const select = document.getElementById(selectId);
    if (!select) return null;

    const products = Object.keys(productChainData);
    products.forEach(product => {
        const option = document.createElement('option');
        option.value = product;
        option.textContent = product;
        select.appendChild(option);
    });

    select.addEventListener('change', (event) => {
        onChangeCallback(event.target.value);
    });

    return select.value;
}

document.addEventListener('DOMContentLoaded', () => {
    const initialProduct = createProductSelector('productSelectHeatmap', updateProductHeatmapChart);
    if (initialProduct) {
        updateProductHeatmapChart(initialProduct);
    } else {
        console.error('Failed to initialize product selector');
    }
});