const chainData = {
    'all': [
        [100.0, 26.139088729016784, 64.5083932853717, 48.201438848920866, 14.388489208633093, 8.393285371702639],
        [0.32123069668749266, 100.0, 31.807733113285398, 15.763880702581634, 0.8693858304844985, 0.5393139219615702],
        [0.6620723603248831, 26.564115185823283, 100.0, 25.175978341127248, 0.9771105094757568, 0.7432931331528427],
        [0.3164258052328327, 8.420704637763295, 16.103082396649977, 100.0, 0.942980384748591, 0.7005446931771669],
        [2.225519287833828, 10.942136498516321, 14.725519287833826, 22.218100890207715, 100.0, 5.0816023738872405],
        [4.45859872611465, 23.312101910828027, 38.47133757961784, 56.68789808917197, 17.452229299363058, 100.0]
    ],
    'ethereum': [[100.0,
        23.021582733812952,
        60.91127098321343,
        43.16546762589928,
        14.388489208633093,
        5.995203836930456],
        [0.38271408068888535,
            100.0,
            37.01164088662095,
            14.953755381916759,
            1.0484771168872589,
            0.3548078456386541],
        [0.8519201744088547,
            31.13868857957404,
            100.0,
            21.52272346134496,
            1.1806137850075467,
            0.41925205433506624],
        [0.7476946082911025,
            15.581124864999584,
            26.6553127855778,
            100.0,
            2.2929301320927142,
            0.6812328653318933],
        [2.225519287833828,
            9.755192878338278,
            13.056379821958458,
            20.474777448071215,
            100.0,
            3.2270029673590503],
        [7.575757575757576,
            26.969696969696972,
            37.878787878787875,
            49.696969696969695,
            26.36363636363636,
            100.0]],
    'fantom': [[0, 0, 0, 0, 0, 0],
        [0.0, 100.0, 9.44206008583691, 4.07725321888412, 0.0, 0.0],
        [0.0, 15.942028985507244, 100.0, 8.695652173913043, 0.0, 0.0],
        [0.0, 5.2924791086350975, 6.685236768802229, 100.0, 0.0, 0.0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0]],
    'optimism': [[0, 0, 0, 0, 0, 0],
        [0.0, 100.0, 10.574572127139364, 7.212713936430318, 0.0, 0.0],
        [0.0, 9.251336898395722, 100.0, 24.81283422459893, 0.0, 0.0],
        [0.0, 2.4894514767932487, 9.78902953586498, 100.0, 0.0, 0.0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0]],
    'polygon': [[0, 0, 0, 0, 0, 0],
        [0.0, 100.0, 12.7408328154133, 6.89869484151647, 0.0, 0.0],
        [0.0, 6.400249765844521, 100.0, 13.549797065251326, 0.0, 0.0],
        [0.0, 0.8304032318396051, 3.246801825390888, 100.0, 0.0, 0.0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0]],
    'xdai': [[0, 0, 0, 0, 0, 0],
        [0.0, 100.0, 4.545454545454546, 5.05050505050505, 0.0, 0.0],
        [0.0, 21.951219512195124, 100.0, 28.455284552845526, 0.0, 0.0],
        [0.0, 12.82051282051282, 14.957264957264957, 100.0, 0.0, 0.0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0]],
    'fraxtal': [[0, 0, 0, 0, 0, 0],
        [0.0, 100.0, 60.0, 40.0, 0.0, 0.0],
        [0.0, 20.192307692307693, 100.0, 56.41025641025641, 0.0, 0.0],
        [0.0, 15.849056603773585, 66.41509433962264, 100.0, 0.0, 0.0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0]],
    'base': [[0, 0, 0, 0, 0, 0],
        [0.0, 100.0, 32.13429256594724, 22.302158273381295, 0.0, 0.0],
        [0.0, 6.218097447795824, 100.0, 40.51044083526682, 0.0, 0.0],
        [0.0, 0.45443440019545567, 4.265819692157342, 100.0, 0.0, 0.0],
        [0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0]],
    'arbitrum': [[0, 0, 0, 0, 0, 0],
        [0.0,
            100.0,
            16.024380652772315,
            15.552497050727487,
            0.0,
            0.9830908375933936],
        [0.0, 15.368659249481425, 100.0, 36.24363567791816, 0.0, 2.8097303413162362],
        [0.0, 6.968549026517487, 16.932428860893314, 100.0, 0.0, 2.3081666813496606],
        [0, 0, 0, 0, 0, 0],
        [0.0,
            10.309278350515463,
            30.721649484536083,
            54.02061855670103,
            0.0,
            100.0]]
};

let chart;

function createHeatmap(data, selectedChain) {
    const seriesData = data.flatMap((row, i) =>
        row.map((value, j) => ({
            x: labels[j],
            y: value.toFixed(2)
        }))
    );

    const options = {
        series: labels.map((label, index) => ({
            name: label,
            data: seriesData.slice(index * labels.length, (index + 1) * labels.length)
        })),
        chart: {
            height: 450,
            type: 'heatmap',
        },
        dataLabels: {
            enabled: true,
            style: {
                colors: ['#222']
            },
            formatter: function (value, {seriesIndex, dataPointIndex, w}) {
                return value + '%';
            }
        },
        colors: ["#97D8C4"],
        title: {
            text: `Overlap Between Users of Curve Products (%) on ${selectedChain === 'all' ? 'all chains' : selectedChain}`
        },
        xaxis: {
            type: 'category',
            categories: labels,
            tooltip: {
                enabled: false
            }
        },
        tooltip: {
            y: {
                formatter: function (value, {seriesIndex, dataPointIndex, w}) {
                    let x = w.config.xaxis.categories[dataPointIndex];
                    let y = w.config.series[seriesIndex].name;
                    return `${value}% of ${y} users also use ${x}  ${selectedChain === 'all' ? '' : 'on ' + selectedChain}`;
                },
                title: {
                    formatter: () => ''
                }
            }
        }
    };

    if (chart) {
        chart.destroy();
    }

    chart = new ApexCharts(document.querySelector("#heatmapChart"), options);
    chart.render();
}

function transposeData(data) {
    return data[0].map((_, colIndex) => data.map(row => row[colIndex]));
}


function updateHeatMapChart(selectedChain) {
    createHeatmap(chainData[selectedChain],selectedChain );
}

document.addEventListener('DOMContentLoaded', () => {
    const initialChainHeatmap = createChainSelector('chainSelectHeatmap', updateHeatMapChart);
    if (initialChainHeatmap) {
        updateHeatMapChart(initialChainHeatmap);
    } else {
        console.error('Failed to initialize chain selector');
    }
});
